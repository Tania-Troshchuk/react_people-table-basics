{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","Navbar","role","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","useParams","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","people","peopleWithParents","map","find","PeoplePage","useState","setPeople","loading","setLoading","error","setError","useEffect","loadPeople","result","length","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.307e79ff.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={slug === person.slug ? 'has-background-warning' : ''}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={person.sex === 'f' ? 'has-text-danger' : ''}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother ? (\n          <Link\n            to={`/people/${person.mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {person.mother.name}\n          </Link>\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {person.father ? (\n          <Link\n            to={`/people/${person.father.slug}`}\n          >\n            {person.father.name}\n          </Link>\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const peopleWithParents: Person[] = people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        setLoading(true);\n\n        const result = await getPeople();\n\n        setPeople(result);\n      } catch {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!loading && !people?.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}